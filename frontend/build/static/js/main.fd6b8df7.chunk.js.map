{"version":3,"sources":["Components/SidebarItem.jsx","Components/Sidebar.jsx","Pages/FirstPage.tsx","Pages/SecondPage.tsx","Pages/ThirdPage.tsx","App.tsx","reportWebVitals.ts","index.tsx","api.js"],"names":["Navitems","id","this","props","item","to","tolink","onClick","activec","bind","Component","Navbar","state","NavItemActive","activeitem","x","length","document","getElementById","classList","remove","setState","add","className","fetch","require","useStyles","makeStyles","theme","createStyles","root","margin","spacing","formControl","minWidth","datePicker","marginLeft","marginTop","textArea","width","fontSize","padding","FirstPage","classes","useState","name","setName","age","setAge","Date","dob","setDob","profession","setProfession","locality","setLocality","guests","setGuests","address","setAddress","isInserted","setIsInserted","useEffect","window","addEventListener","handleBeforeUnload","removeEventListener","e","preventDefault","message","returnValue","Alert","severity","AlertTitle","style","noValidate","autoComplete","FormControl","variant","InputLabel","htmlFor","OutlinedInput","label","value","onChange","target","utils","DateFnsUtils","allowKeyboardControl","format","date","KeyboardButtonProps","Select","labelId","event","MenuItem","display","justifyContent","TextareaAutosize","minRows","minLength","placeholder","Button","size","color","result","parseInt","toDateString","numberOfGuests","API_PROD","method","body","JSON","stringify","headers","then","res","json","setTimeout","table","heading","fontWeight","details","data","setData","searched","setSearched","requestSearch","searchedVal","filteredRows","filter","row","toLowerCase","includes","Paper","marginRight","cancelOnEscape","searchVal","onCancelSearch","TableContainer","component","Table","TableHead","TableRow","TableCell","align","TableBody","map","_id","zeroPplAvg","onePplAvg","twoPplAvg","below18","below25","above25","empCount","studentCount","chnCount","mumCount","bngCount","hydCount","totalCount","zeroPplCount","onePplCount","twoPplCount","forEach","ele","height","chartType","loader","options","chart","title","subtitle","App","exact","path","SecondPage","ThirdPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","exports","API_LOCAL"],"mappings":"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","file":"static/js/main.fd6b8df7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Navitems extends Component {\n  render() {\n    return (\n      <li id={this.props.item}>\n        <Link\n          to={this.props.tolink}\n          onClick={this.props.activec.bind(this, this.props.item)}\n        >\n          {this.props.item}\n        </Link>\n      </li>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Navitem from \"./SidebarItem\";\n\nexport default class Navbar extends Component {\n  state = {\n    NavItemActive: \"\",\n  };\n\n  activeitem = (x) => {\n    if (this.state.NavItemActive.length > 0) {\n      document\n        .getElementById(this.state.NavItemActive)\n        .classList.remove(\"active\");\n    }\n    this.setState({ NavItemActive: x }, () => {\n      document.getElementById(this.state.NavItemActive).classList.add(\"active\");\n    });\n  };\n  render() {\n    return (\n      <nav>\n        <ul>\n          <Navitem\n            className=\"home\"\n            item=\"First Page\"\n            tolink=\"/\"\n            activec={this.activeitem}\n          />\n          <Navitem\n            item=\"Second Page\"\n            tolink=\"/second\"\n            activec={this.activeitem}\n          />\n          <Navitem\n            item=\"Third Page\"\n            tolink=\"/third\"\n            activec={this.activeitem}\n          />\n        </ul>\n      </nav>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport {\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  Select,\n  MenuItem,\n  Button,\n  TextareaAutosize,\n} from \"@material-ui/core\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { API_PROD } from \"../api\";\nlet fetch = require(\"node-fetch\");\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"& > *\": {\n        margin: theme.spacing(3),\n      },\n    },\n    formControl: {\n      minWidth: 230,\n    },\n    datePicker: {\n      marginLeft: \"25px\",\n      marginTop: \"25px\",\n    },\n    textArea: {\n      width: \"500px\",\n      fontSize: \"16px\",\n      padding: \"10px\",\n    },\n  })\n);\n\nconst FirstPage: React.FC<{}> = () => {\n  const classes = useStyles();\n\n  const [name, setName] = useState<string | null>(\"\");\n  const [age, setAge] = useState<string>(\"\");\n  const [dob, setDob] = useState<Date | null>(new Date(\"2014-08-18T21:11:54\"));\n  const [profession, setProfession] = useState<string | null>(\"\");\n  const [locality, setLocality] = useState<string>(\"\");\n  const [guests, setGuests] = useState<string>(\"\");\n  const [address, setAddress] = useState<string>(\"\");\n  const [isInserted, setIsInserted] = useState<boolean>(false);\n\n  const handleDateChange = (date: Date | null) => {\n    setDob(date);\n  };\n\n  const handleProfessionChange = (\n    event: React.ChangeEvent<{ value: unknown }>\n  ) => {\n    setProfession(event.target.value as string);\n  };\n\n  const handleGuestsChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setGuests(event.target.value as string);\n  };\n\n  const handleLocalityChange = (\n    event: React.ChangeEvent<{ value: unknown }>\n  ) => {\n    setLocality(event.target.value as string);\n  };\n\n  const handleClick = (e: any) => {\n    var result = {\n      name: name,\n      age: parseInt(age),\n      dob: dob?.toDateString(),\n      profession: profession,\n      locality: locality,\n      numberOfGuests: parseInt(guests),\n      address: address,\n    };\n\n    fetch(`${API_PROD}/save`, {\n      method: \"POST\",\n      body: JSON.stringify(result),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res: { json: () => any }) => res.json())\n      .then(() => {\n        setName(\"\");\n        setAge(\"\");\n        setProfession(\"\");\n        setLocality(\"\");\n        setGuests(\"\");\n        setAddress(\"\");\n        setIsInserted(true);\n        setTimeout(() => {\n          setIsInserted(false);\n        }, 3000);\n      });\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, []);\n\n  const handleBeforeUnload = (e: any) => {\n    e.preventDefault();\n    const message = \"Are you sure you want to leave?\";\n    e.returnValue = message;\n    return message;\n  };\n\n  return (\n    <>\n      {isInserted && (\n        <div className=\"sucessMessage\">\n          <Alert severity=\"success\">\n            <AlertTitle>Success</AlertTitle>\n            Data Inserted — <strong>Successfully!</strong>\n          </Alert>\n        </div>\n      )}\n      <div className=\"condiv home\" style={{ marginTop: \"50px\" }}>\n        <h1>RSVP Registration Form</h1>\n        <form className={classes.root} noValidate autoComplete=\"off\">\n          <div>\n            {/* name  */}\n            <FormControl variant=\"outlined\" style={{ margin: \"20px\" }}>\n              <InputLabel htmlFor=\"component-outlined\">Name</InputLabel>\n              <OutlinedInput\n                id=\"component-outlined\"\n                label=\"Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </FormControl>\n            {/* age */}\n            <FormControl variant=\"outlined\" style={{ margin: \"20px\" }}>\n              <InputLabel htmlFor=\"component-outlined\">Age</InputLabel>\n              <OutlinedInput\n                id=\"component-outlined\"\n                label=\"Age\"\n                value={age}\n                onChange={(e) => setAge(e.target.value)}\n              />\n            </FormControl>\n            {/* date of birth */}\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                variant=\"inline\"\n                allowKeyboardControl\n                format=\"dd/MM/yyyy\"\n                margin=\"dense\"\n                label=\"Date of Birth\"\n                value={dob}\n                onChange={handleDateChange}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"change date\",\n                }}\n                className={classes.datePicker}\n              />\n            </MuiPickersUtilsProvider>\n          </div>\n          <div>\n            {/* profession */}\n            <FormControl\n              variant=\"outlined\"\n              className={classes.formControl}\n              style={{ margin: \"20px\" }}\n            >\n              <InputLabel id=\"demo-simple-select-filled-label\">\n                Profession\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={profession}\n                onChange={handleProfessionChange}\n                label=\"Profession\"\n              >\n                <MenuItem value={\"Employee\"}>Employee</MenuItem>\n                <MenuItem value={\"Student\"}>Student</MenuItem>\n              </Select>\n            </FormControl>\n            {/* locality */}\n            <FormControl\n              variant=\"outlined\"\n              className={classes.formControl}\n              style={{ margin: \"20px\" }}\n            >\n              <InputLabel id=\"demo-simple-select-filled-label\">\n                Locality\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={locality}\n                onChange={handleLocalityChange}\n                label=\"Locality\"\n              >\n                <MenuItem value={\"Chennai\"}>Chennai</MenuItem>\n                <MenuItem value={\"Mumbai\"}>Mumbai</MenuItem>\n                <MenuItem value={\"Hyderabad\"}>Hyderabad</MenuItem>\n                <MenuItem value={\"Bangalore\"}>Bangalore</MenuItem>\n              </Select>\n            </FormControl>\n            {/* No.of guests */}\n            <FormControl\n              variant=\"outlined\"\n              className={classes.formControl}\n              style={{ margin: \"20px\" }}\n            >\n              <InputLabel id=\"demo-simple-select-filled-label\">\n                No.of Guests\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={guests}\n                onChange={handleGuestsChange}\n                label=\"No.of Guests\"\n              >\n                <MenuItem value={0}>0</MenuItem>\n                <MenuItem value={1}>1</MenuItem>\n                <MenuItem value={2}>2</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n          {/* address */}\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <TextareaAutosize\n              minRows={5}\n              minLength={100}\n              placeholder=\"Enter your Address\"\n              className={classes.textArea}\n              value={address}\n              onChange={(e) => setAddress(e.target.value)}\n            />\n          </div>\n          {/* submit */}\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleClick}\n            >\n              Submit\n            </Button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default FirstPage;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SearchBar from \"material-ui-search-bar\";\nimport { API_PROD } from \"../api\";\nlet fetch = require(\"node-fetch\");\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n  heading: {\n    fontSize: \"18px\",\n    fontWeight: \"bold\",\n  },\n  details: {\n    fontSize: \"16px\",\n  },\n});\n\ninterface IDetails {\n  name: string;\n  age: number;\n  dob: string;\n  profession: string;\n  locality: string;\n  numberOfGuests: string;\n  address: string;\n}\n\nconst FirstPage = () => {\n  const classes = useStyles();\n  const [data, setData] = useState<IDetails[]>();\n  const [searched, setSearched] = useState<string>(\"\");\n\n  const fetchData = () => {\n    fetch(`${API_PROD}/show`, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res: { json: () => any }) => res.json())\n      .then((json: any) => setData(json));\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const requestSearch = (searchedVal: string) => {\n    const filteredRows = data?.filter((row) => {\n      return (\n        row.locality.toLowerCase().includes(searchedVal.toLowerCase()) ||\n        row.name.toLowerCase().includes(searchedVal.toLowerCase())\n      );\n    });\n    setData(filteredRows);\n  };\n\n  const cancelSearch = () => {\n    setSearched(\"\");\n    requestSearch(searched);\n  };\n\n  return (\n    <div className=\"condiv home\">\n      <Paper variant=\"outlined\" style={{ width: 1200, marginRight: \"60px\" }}>\n        <SearchBar\n          cancelOnEscape={true}\n          value={searched}\n          onChange={(searchVal) => requestSearch(searchVal)}\n          onCancelSearch={() => cancelSearch()}\n        />\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\" className={classes.heading}>\n                  Name\n                </TableCell>\n                <TableCell align=\"center\" className={classes.heading}>\n                  Age\n                </TableCell>\n                <TableCell align=\"center\" className={classes.heading}>\n                  Date of Birth\n                </TableCell>\n                <TableCell align=\"center\" className={classes.heading}>\n                  Profession\n                </TableCell>\n                <TableCell align=\"center\" className={classes.heading}>\n                  Locality\n                </TableCell>\n                <TableCell align=\"center\" className={classes.heading}>\n                  No.of Guests\n                </TableCell>\n                <TableCell align=\"right\" className={classes.heading}>\n                  Address\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data?.map((row: any) => (\n                <TableRow key={row._id}>\n                  <TableCell align=\"center\" className={classes.details}>\n                    {row.name}\n                  </TableCell>\n                  <TableCell align=\"center\" className={classes.details}>\n                    {row.age}\n                  </TableCell>\n                  <TableCell align=\"center\" className={classes.details}>\n                    {row.dob}\n                  </TableCell>\n                  <TableCell align=\"center\" className={classes.details}>\n                    {row.profession}\n                  </TableCell>\n                  <TableCell align=\"center\" className={classes.details}>\n                    {row.locality}\n                  </TableCell>\n                  <TableCell align=\"center\" className={classes.details}>\n                    {row.numberOfGuests}\n                  </TableCell>\n                  <TableCell align=\"right\" className={classes.details}>\n                    {row.address}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </div>\n  );\n};\n\nexport default FirstPage;\n","import React, { useEffect, useState } from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport { API_PROD } from \"../api\";\n\ninterface IDetails {\n  name: string;\n  age: number;\n  dob: string;\n  profession: string;\n  locality: string;\n  numberOfGuests: string;\n  address: string;\n}\n\nconst FirstPage = () => {\n  const [data, setData] = useState<IDetails[]>();\n\n  let below18 = 0,\n    below25 = 0,\n    above25 = 0;\n\n  let empCount = 0,\n    studentCount = 0;\n\n  let chnCount = 0,\n    mumCount = 0,\n    bngCount = 0,\n    hydCount = 0;\n\n  let totalCount = 0,\n    zeroPplCount = 0,\n    onePplCount = 0,\n    twoPplCount = 0;\n\n  let zeroPplAvg = 0,\n    onePplAvg = 0,\n    twoPplAvg = 0;\n\n  const fetchData = () => {\n    fetch(`${API_PROD}/show`, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res: { json: () => any }) => res.json())\n      .then((json: any) => setData(json));\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  data?.forEach((ele: any) => {\n    //age group\n    if (ele.age > 13 && ele.age < 18) {\n      below18++;\n    } else if (ele.age > 18 && ele.age < 25) {\n      below25++;\n    } else if (ele.age > 25) {\n      above25++;\n    }\n\n    //professor or student\n    if (ele.profession === \"Employee\") {\n      empCount++;\n    } else {\n      studentCount++;\n    }\n\n    //locality\n    if (ele.locality === \"Chennai\") {\n      chnCount++;\n    } else if (ele.locality === \"Mumbai\") {\n      mumCount++;\n    } else if (ele.locality === \"Hyderabad\") {\n      hydCount++;\n    } else if (ele.locality === \"Bangalore\") {\n      bngCount++;\n    }\n\n    //guests\n    if (ele.numberOfGuests === 0) {\n      zeroPplCount++;\n    } else if (ele.numberOfGuests === 1) {\n      onePplCount++;\n    } else if (ele.numberOfGuests === 2) {\n      twoPplCount++;\n    }\n    totalCount++;\n  });\n\n  zeroPplAvg = (zeroPplCount / totalCount) * 100;\n  onePplAvg = (onePplCount / totalCount) * 100;\n  twoPplAvg = (twoPplCount / totalCount) * 100;\n\n  return (\n    <>\n      <div className=\"condiv home\">\n        <div className=\"chart__wrapper\">\n          <div style={{ marginRight: \"40px\" }}>\n            <Chart\n              width={\"500px\"}\n              height={\"300px\"}\n              chartType=\"Bar\"\n              loader={<div>Loading Chart</div>}\n              data={[\n                [\"Age\", \"Count\"],\n                [\"13-18\", below18],\n                [\"18-25\", below25],\n                [\"25+\", above25],\n              ]}\n              options={{\n                chart: {\n                  title: \"RSVP Age Group\",\n                  subtitle: \"Count of person in a certain age group\",\n                },\n              }}\n            />\n          </div>\n          <div>\n            <Chart\n              width={\"500px\"}\n              height={\"300px\"}\n              chartType=\"Bar\"\n              loader={<div>Loading Chart</div>}\n              data={[\n                [\"Profession\", \"Count\"],\n                [\"Student\", studentCount],\n                [\"Employee\", empCount],\n              ]}\n              options={{\n                chart: {\n                  title: \"RSVP Profession\",\n                  subtitle: \"Count of person based on their profession\",\n                },\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"chart__wrapper\" style={{ marginTop: \"50px\" }}>\n          <div style={{ marginRight: \"40px\" }}>\n            <Chart\n              width={\"500px\"}\n              height={\"300px\"}\n              chartType=\"Bar\"\n              loader={<div>Loading Chart</div>}\n              data={[\n                [\"Cities\", \"Count\"],\n                [\"Chennai\", chnCount],\n                [\"Mumbai\", mumCount],\n                [\"Bangalore\", bngCount],\n                [\"Hyderabad\", hydCount],\n              ]}\n              options={{\n                chart: {\n                  title: \"RSVP Locality\",\n                  subtitle: \"Count of person based on their Locality\",\n                },\n              }}\n            />\n          </div>\n          <div>\n            <Chart\n              width={\"500px\"}\n              height={\"300px\"}\n              chartType=\"Bar\"\n              loader={<div>Loading Chart</div>}\n              data={[\n                [\"No.of Guests\", \"Average\"],\n                [\"0\", zeroPplAvg],\n                [\"1\", onePplAvg],\n                [\"2\", twoPplAvg],\n              ]}\n              options={{\n                chart: {\n                  title: \"RSVP Guests\",\n                  subtitle: \"Average of guests attended\",\n                },\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default FirstPage;\n","import React from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./Components/Sidebar\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport FirstPage from \"./Pages/FirstPage\";\nimport SecondPage from \"./Pages/SecondPage\";\nimport ThirdPage from \"./Pages/ThirdPage\";\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"left\">\n          <Sidebar />\n        </div>\n        <div className=\"right\">\n          <Route exact path=\"/\">\n            <FirstPage />\n          </Route>\n          <Route exact path=\"/second\">\n            <SecondPage />\n          </Route>\n          <Route exact path=\"/third\">\n            <ThirdPage />\n          </Route>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n","exports.API_PROD = \"http://3.108.40.131:8000/api\";\nexports.API_LOCAL = \"http://localhost:8000/api\";\n"],"sourceRoot":""}